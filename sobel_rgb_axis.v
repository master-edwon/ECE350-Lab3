// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_rgb_axis_sobel_rgb_axis,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=14.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.992000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=980,HLS_SYN_LUT=1582,HLS_VERSION=2025_1}" *)

module sobel_rgb_axis (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_axis_TDATA,
        in_axis_TVALID,
        in_axis_TREADY,
        in_axis_TKEEP,
        in_axis_TSTRB,
        in_axis_TUSER,
        in_axis_TLAST,
        in_axis_TID,
        in_axis_TDEST,
        out_axis_TDATA,
        out_axis_TVALID,
        out_axis_TREADY,
        out_axis_TKEEP,
        out_axis_TSTRB,
        out_axis_TUSER,
        out_axis_TLAST,
        out_axis_TID,
        out_axis_TDEST,
        width,
        height
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] in_axis_TDATA;
input   in_axis_TVALID;
output   in_axis_TREADY;
input  [2:0] in_axis_TKEEP;
input  [2:0] in_axis_TSTRB;
input  [0:0] in_axis_TUSER;
input  [0:0] in_axis_TLAST;
input  [0:0] in_axis_TID;
input  [0:0] in_axis_TDEST;
output  [23:0] out_axis_TDATA;
output   out_axis_TVALID;
input   out_axis_TREADY;
output  [2:0] out_axis_TKEEP;
output  [2:0] out_axis_TSTRB;
output  [0:0] out_axis_TUSER;
output  [0:0] out_axis_TLAST;
output  [0:0] out_axis_TID;
output  [0:0] out_axis_TDEST;
input  [31:0] width;
input  [31:0] height;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] width_read_reg_175;
wire   [30:0] smax_fu_139_p3;
reg   [30:0] smax_reg_181;
wire   [30:0] smax1_fu_153_p3;
reg   [30:0] smax1_reg_186;
wire   [61:0] mul_ln18_fu_121_p2;
reg   [61:0] mul_ln18_reg_191;
wire    ap_CS_fsm_state2;
wire   [31:0] sub133_fu_169_p2;
reg   [31:0] sub133_reg_196;
wire    ap_CS_fsm_state3;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_done;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_idle;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_ready;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TREADY;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_in_axis_TREADY;
wire   [23:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDATA;
wire    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID;
wire   [2:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TKEEP;
wire   [2:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TSTRB;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TUSER;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TLAST;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TID;
wire   [0:0] grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDEST;
reg    grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start_reg;
wire    ap_CS_fsm_state4;
reg   [23:0] out_axis_TDATA_reg;
reg   [2:0] out_axis_TKEEP_reg;
reg   [2:0] out_axis_TSTRB_reg;
reg   [0:0] out_axis_TUSER_reg;
reg   [0:0] out_axis_TLAST_reg;
reg   [0:0] out_axis_TID_reg;
reg   [0:0] out_axis_TDEST_reg;
wire   [30:0] mul_ln18_fu_121_p0;
wire   [30:0] mul_ln18_fu_121_p1;
wire   [0:0] empty_fu_133_p2;
wire   [30:0] trunc_ln18_1_fu_129_p1;
wire   [0:0] empty_18_fu_147_p2;
wire   [30:0] trunc_ln18_fu_125_p1;
wire    ap_CS_fsm_state5;
wire    regslice_both_out_axis_V_data_V_U_apdone_blk;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    regslice_both_in_axis_V_data_V_U_apdone_blk;
wire   [23:0] in_axis_TDATA_int_regslice;
wire    in_axis_TVALID_int_regslice;
reg    in_axis_TREADY_int_regslice;
wire    regslice_both_in_axis_V_data_V_U_ack_in;
wire    regslice_both_in_axis_V_keep_V_U_apdone_blk;
wire   [2:0] in_axis_TKEEP_int_regslice;
wire    regslice_both_in_axis_V_keep_V_U_vld_out;
wire    regslice_both_in_axis_V_keep_V_U_ack_in;
wire    regslice_both_in_axis_V_strb_V_U_apdone_blk;
wire   [2:0] in_axis_TSTRB_int_regslice;
wire    regslice_both_in_axis_V_strb_V_U_vld_out;
wire    regslice_both_in_axis_V_strb_V_U_ack_in;
wire    regslice_both_in_axis_V_user_V_U_apdone_blk;
wire   [0:0] in_axis_TUSER_int_regslice;
wire    regslice_both_in_axis_V_user_V_U_vld_out;
wire    regslice_both_in_axis_V_user_V_U_ack_in;
wire    regslice_both_in_axis_V_last_V_U_apdone_blk;
wire   [0:0] in_axis_TLAST_int_regslice;
wire    regslice_both_in_axis_V_last_V_U_vld_out;
wire    regslice_both_in_axis_V_last_V_U_ack_in;
wire    regslice_both_in_axis_V_id_V_U_apdone_blk;
wire   [0:0] in_axis_TID_int_regslice;
wire    regslice_both_in_axis_V_id_V_U_vld_out;
wire    regslice_both_in_axis_V_id_V_U_ack_in;
wire    regslice_both_in_axis_V_dest_V_U_apdone_blk;
wire   [0:0] in_axis_TDEST_int_regslice;
wire    regslice_both_in_axis_V_dest_V_U_vld_out;
wire    regslice_both_in_axis_V_dest_V_U_ack_in;
reg   [23:0] out_axis_TDATA_int_regslice;
wire    out_axis_TVALID_int_regslice;
wire    out_axis_TREADY_int_regslice;
wire    regslice_both_out_axis_V_data_V_U_vld_out;
wire    regslice_both_out_axis_V_keep_V_U_apdone_blk;
reg   [2:0] out_axis_TKEEP_int_regslice;
wire    regslice_both_out_axis_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_keep_V_U_vld_out;
wire    regslice_both_out_axis_V_strb_V_U_apdone_blk;
reg   [2:0] out_axis_TSTRB_int_regslice;
wire    regslice_both_out_axis_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_strb_V_U_vld_out;
wire    regslice_both_out_axis_V_user_V_U_apdone_blk;
reg   [0:0] out_axis_TUSER_int_regslice;
wire    regslice_both_out_axis_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_user_V_U_vld_out;
wire    regslice_both_out_axis_V_last_V_U_apdone_blk;
reg   [0:0] out_axis_TLAST_int_regslice;
wire    regslice_both_out_axis_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_last_V_U_vld_out;
wire    regslice_both_out_axis_V_id_V_U_apdone_blk;
reg   [0:0] out_axis_TID_int_regslice;
wire    regslice_both_out_axis_V_id_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_id_V_U_vld_out;
wire    regslice_both_out_axis_V_dest_V_U_apdone_blk;
reg   [0:0] out_axis_TDEST_int_regslice;
wire    regslice_both_out_axis_V_dest_V_U_ack_in_dummy;
wire    regslice_both_out_axis_V_dest_V_U_vld_out;
wire   [61:0] mul_ln18_fu_121_p00;
wire   [61:0] mul_ln18_fu_121_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start_reg = 1'b0;
end

sobel_rgb_axis_sobel_rgb_axis_Pipeline_row_loop_col_loop grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start),
    .ap_done(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_done),
    .ap_idle(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_idle),
    .ap_ready(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_ready),
    .in_axis_TVALID(in_axis_TVALID_int_regslice),
    .out_axis_TREADY(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TREADY),
    .mul_ln18(mul_ln18_reg_191),
    .width(width_read_reg_175),
    .in_axis_TDATA(in_axis_TDATA_int_regslice),
    .in_axis_TREADY(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_in_axis_TREADY),
    .in_axis_TKEEP(in_axis_TKEEP_int_regslice),
    .in_axis_TSTRB(in_axis_TSTRB_int_regslice),
    .in_axis_TUSER(in_axis_TUSER_int_regslice),
    .in_axis_TLAST(in_axis_TLAST_int_regslice),
    .in_axis_TID(in_axis_TID_int_regslice),
    .in_axis_TDEST(in_axis_TDEST_int_regslice),
    .sub133(sub133_reg_196),
    .out_axis_TDATA(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDATA),
    .out_axis_TVALID(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .out_axis_TKEEP(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TKEEP),
    .out_axis_TSTRB(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TSTRB),
    .out_axis_TUSER(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TUSER),
    .out_axis_TLAST(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TLAST),
    .out_axis_TID(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TID),
    .out_axis_TDEST(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDEST)
);

sobel_rgb_axis_mul_31ns_31ns_62_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 31 ),
    .dout_WIDTH( 62 ))
mul_31ns_31ns_62_1_1_U26(
    .din0(mul_ln18_fu_121_p0),
    .din1(mul_ln18_fu_121_p1),
    .dout(mul_ln18_fu_121_p2)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 24 ))
regslice_both_in_axis_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TDATA),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_data_V_U_ack_in),
    .data_out(in_axis_TDATA_int_regslice),
    .vld_out(in_axis_TVALID_int_regslice),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_data_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_axis_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TKEEP),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_keep_V_U_ack_in),
    .data_out(in_axis_TKEEP_int_regslice),
    .vld_out(regslice_both_in_axis_V_keep_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_keep_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_in_axis_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TSTRB),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_strb_V_U_ack_in),
    .data_out(in_axis_TSTRB_int_regslice),
    .vld_out(regslice_both_in_axis_V_strb_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_strb_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TUSER),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_user_V_U_ack_in),
    .data_out(in_axis_TUSER_int_regslice),
    .vld_out(regslice_both_in_axis_V_user_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_user_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TLAST),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_last_V_U_ack_in),
    .data_out(in_axis_TLAST_int_regslice),
    .vld_out(regslice_both_in_axis_V_last_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_last_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TID),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_id_V_U_ack_in),
    .data_out(in_axis_TID_int_regslice),
    .vld_out(regslice_both_in_axis_V_id_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_id_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_axis_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_axis_TDEST),
    .vld_in(in_axis_TVALID),
    .ack_in(regslice_both_in_axis_V_dest_V_U_ack_in),
    .data_out(in_axis_TDEST_int_regslice),
    .vld_out(regslice_both_in_axis_V_dest_V_U_vld_out),
    .ack_out(in_axis_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_axis_V_dest_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 24 ))
regslice_both_out_axis_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TDATA_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .ack_in(out_axis_TREADY_int_regslice),
    .data_out(out_axis_TDATA),
    .vld_out(regslice_both_out_axis_V_data_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_data_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_out_axis_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TKEEP_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_keep_V_U_ack_in_dummy),
    .data_out(out_axis_TKEEP),
    .vld_out(regslice_both_out_axis_V_keep_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_keep_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 3 ))
regslice_both_out_axis_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TSTRB_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_strb_V_U_ack_in_dummy),
    .data_out(out_axis_TSTRB),
    .vld_out(regslice_both_out_axis_V_strb_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_strb_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TUSER_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_user_V_U_ack_in_dummy),
    .data_out(out_axis_TUSER),
    .vld_out(regslice_both_out_axis_V_user_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_user_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TLAST_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_last_V_U_ack_in_dummy),
    .data_out(out_axis_TLAST),
    .vld_out(regslice_both_out_axis_V_last_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_last_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TID_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_id_V_U_ack_in_dummy),
    .data_out(out_axis_TID),
    .vld_out(regslice_both_out_axis_V_id_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_id_V_U_apdone_blk)
);

sobel_rgb_axis_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_axis_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_axis_TDEST_int_regslice),
    .vld_in(grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID),
    .ack_in(regslice_both_out_axis_V_dest_V_U_ack_in_dummy),
    .data_out(out_axis_TDEST),
    .vld_out(regslice_both_out_axis_V_dest_V_U_vld_out),
    .ack_out(out_axis_TREADY),
    .apdone_blk(regslice_both_out_axis_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start_reg <= 1'b1;
        end else if ((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_ready == 1'b1)) begin
            grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln18_reg_191 <= mul_ln18_fu_121_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TDATA_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDATA;
        out_axis_TDEST_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDEST;
        out_axis_TID_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TID;
        out_axis_TKEEP_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TKEEP;
        out_axis_TLAST_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TLAST;
        out_axis_TSTRB_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TSTRB;
        out_axis_TUSER_reg <= grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        smax1_reg_186 <= smax1_fu_153_p3;
        smax_reg_181 <= smax_fu_139_p3;
        width_read_reg_175 <= width;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sub133_reg_196 <= sub133_fu_169_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        in_axis_TREADY_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_in_axis_TREADY;
    end else begin
        in_axis_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TDATA_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDATA;
    end else begin
        out_axis_TDATA_int_regslice = out_axis_TDATA_reg;
    end
end

always @ (*) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TDEST_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TDEST;
    end else begin
        out_axis_TDEST_int_regslice = out_axis_TDEST_reg;
    end
end

always @ (*) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TID_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TID;
    end else begin
        out_axis_TID_int_regslice = out_axis_TID_reg;
    end
end

always @ (*) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TKEEP_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TKEEP;
    end else begin
        out_axis_TKEEP_int_regslice = out_axis_TKEEP_reg;
    end
end

always @ (*) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TLAST_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TLAST;
    end else begin
        out_axis_TLAST_int_regslice = out_axis_TLAST_reg;
    end
end

always @ (*) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TSTRB_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TSTRB;
    end else begin
        out_axis_TSTRB_int_regslice = out_axis_TSTRB_reg;
    end
end

always @ (*) begin
    if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        out_axis_TUSER_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TUSER;
    end else begin
        out_axis_TUSER_int_regslice = out_axis_TUSER_reg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (regslice_both_out_axis_V_data_V_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_18_fu_147_p2 = (($signed(width) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign empty_fu_133_p2 = (($signed(height) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_ap_start_reg;

assign grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TREADY = (out_axis_TREADY_int_regslice & ap_CS_fsm_state4);

assign in_axis_TREADY = regslice_both_in_axis_V_data_V_U_ack_in;

assign mul_ln18_fu_121_p0 = mul_ln18_fu_121_p00;

assign mul_ln18_fu_121_p00 = smax_reg_181;

assign mul_ln18_fu_121_p1 = mul_ln18_fu_121_p10;

assign mul_ln18_fu_121_p10 = smax1_reg_186;

assign out_axis_TVALID = regslice_both_out_axis_V_data_V_U_vld_out;

assign out_axis_TVALID_int_regslice = grp_sobel_rgb_axis_Pipeline_row_loop_col_loop_fu_82_out_axis_TVALID;

assign smax1_fu_153_p3 = ((empty_18_fu_147_p2[0:0] == 1'b1) ? trunc_ln18_fu_125_p1 : 31'd0);

assign smax_fu_139_p3 = ((empty_fu_133_p2[0:0] == 1'b1) ? trunc_ln18_1_fu_129_p1 : 31'd0);

assign sub133_fu_169_p2 = ($signed(width_read_reg_175) + $signed(32'd4294967295));

assign trunc_ln18_1_fu_129_p1 = height[30:0];

assign trunc_ln18_fu_125_p1 = width[30:0];

endmodule //sobel_rgb_axis
