// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sobel_rgb_axis_sobel_rgb_axis_Pipeline_row_loop_col_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_axis_TVALID,
        out_axis_TREADY,
        mul_ln18,
        width,
        in_axis_TDATA,
        in_axis_TREADY,
        in_axis_TKEEP,
        in_axis_TSTRB,
        in_axis_TUSER,
        in_axis_TLAST,
        in_axis_TID,
        in_axis_TDEST,
        sub133,
        out_axis_TDATA,
        out_axis_TVALID,
        out_axis_TKEEP,
        out_axis_TSTRB,
        out_axis_TUSER,
        out_axis_TLAST,
        out_axis_TID,
        out_axis_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   in_axis_TVALID;
input   out_axis_TREADY;
input  [61:0] mul_ln18;
input  [31:0] width;
input  [23:0] in_axis_TDATA;
output   in_axis_TREADY;
input  [2:0] in_axis_TKEEP;
input  [2:0] in_axis_TSTRB;
input  [0:0] in_axis_TUSER;
input  [0:0] in_axis_TLAST;
input  [0:0] in_axis_TID;
input  [0:0] in_axis_TDEST;
input  [31:0] sub133;
output  [23:0] out_axis_TDATA;
output   out_axis_TVALID;
output  [2:0] out_axis_TKEEP;
output  [2:0] out_axis_TSTRB;
output  [0:0] out_axis_TUSER;
output  [0:0] out_axis_TLAST;
output  [0:0] out_axis_TID;
output  [0:0] out_axis_TDEST;

reg ap_idle;
reg in_axis_TREADY;
reg out_axis_TVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln37_fu_342_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [7:0] line1_q0;
wire   [7:0] line0_d0;
wire   [9:0] line0_address1;
wire   [7:0] line0_q1;
reg    in_axis_TDATA_blk_n;
wire    ap_block_pp0_stage0_grp1;
reg    out_axis_TDATA_blk_n;
wire    ap_block_pp0_stage0_11001_grp0;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_11001_grp1;
reg    ap_block_pp0_stage0_11001;
reg   [2:0] din_keep_reg_1098;
reg   [2:0] din_keep_reg_1098_pp0_iter3_reg;
reg   [2:0] din_keep_reg_1098_pp0_iter4_reg;
reg   [2:0] din_keep_reg_1098_pp0_iter5_reg;
reg   [2:0] din_keep_reg_1098_pp0_iter6_reg;
reg   [2:0] din_keep_reg_1098_pp0_iter7_reg;
reg   [2:0] din_strb_reg_1103;
reg   [2:0] din_strb_reg_1103_pp0_iter3_reg;
reg   [2:0] din_strb_reg_1103_pp0_iter4_reg;
reg   [2:0] din_strb_reg_1103_pp0_iter5_reg;
reg   [2:0] din_strb_reg_1103_pp0_iter6_reg;
reg   [2:0] din_strb_reg_1103_pp0_iter7_reg;
reg   [0:0] din_id_reg_1108;
reg   [0:0] din_id_reg_1108_pp0_iter3_reg;
reg   [0:0] din_id_reg_1108_pp0_iter4_reg;
reg   [0:0] din_id_reg_1108_pp0_iter5_reg;
reg   [0:0] din_id_reg_1108_pp0_iter6_reg;
reg   [0:0] din_id_reg_1108_pp0_iter7_reg;
reg   [0:0] din_dest_reg_1113;
reg   [0:0] din_dest_reg_1113_pp0_iter3_reg;
reg   [0:0] din_dest_reg_1113_pp0_iter4_reg;
reg   [0:0] din_dest_reg_1113_pp0_iter5_reg;
reg   [0:0] din_dest_reg_1113_pp0_iter6_reg;
reg   [0:0] din_dest_reg_1113_pp0_iter7_reg;
reg   [7:0] g_reg_1118;
reg   [7:0] g_reg_1118_pp0_iter3_reg;
wire   [7:0] b_fu_394_p1;
reg   [7:0] b_reg_1123;
wire   [15:0] mul_ln13_1_fu_408_p2;
wire   [0:0] icmp_ln44_fu_421_p2;
reg   [0:0] icmp_ln44_reg_1143;
reg   [0:0] icmp_ln44_reg_1143_pp0_iter6_reg;
wire   [0:0] first_iter_0_fu_438_p2;
reg   [0:0] first_iter_0_reg_1154;
reg   [0:0] first_iter_0_reg_1154_pp0_iter6_reg;
wire   [15:0] grp_fu_971_p3;
reg   [9:0] line1_addr_reg_1164;
wire   [0:0] addr_cmp30_fu_453_p2;
reg   [0:0] addr_cmp30_reg_1169;
reg   [0:0] addr_cmp30_reg_1169_pp0_iter6_reg;
reg   [9:0] line0_addr_reg_1174;
wire   [0:0] addr_cmp_fu_462_p2;
reg   [0:0] addr_cmp_reg_1180;
wire   [0:0] icmp_ln74_fu_488_p2;
reg   [0:0] icmp_ln74_reg_1185;
reg   [0:0] icmp_ln74_reg_1185_pp0_iter6_reg;
wire   [0:0] dout_last_fu_494_p2;
reg   [0:0] dout_last_reg_1190;
reg   [0:0] dout_last_reg_1190_pp0_iter6_reg;
reg   [0:0] dout_last_reg_1190_pp0_iter7_reg;
wire   [7:0] select_ln37_1_fu_516_p3;
reg   [7:0] select_ln37_1_reg_1195;
reg   [7:0] gray_reg_1200;
wire   [7:0] w1_2_fu_543_p3;
reg   [7:0] w1_2_reg_1206;
wire   [9:0] add_ln81_fu_572_p2;
reg   [9:0] add_ln81_reg_1213;
wire   [0:0] and_ln74_fu_673_p2;
reg   [0:0] and_ln74_reg_1218;
wire   [9:0] empty_17_fu_818_p1;
reg   [9:0] empty_17_reg_1223;
wire   [9:0] trunc_ln72_fu_830_p1;
reg   [9:0] trunc_ln72_reg_1229;
reg   [0:0] tmp_2_reg_1235;
reg   [0:0] tmp_3_reg_1240;
wire   [0:0] dout_user_fu_850_p2;
reg   [0:0] dout_user_reg_1245;
wire   [63:0] zext_ln44_fu_444_p1;
reg   [63:0] reuse_addr_reg27_fu_132;
wire    ap_loop_init;
reg   [7:0] reuse_reg26_fu_136;
reg   [63:0] reuse_addr_reg_fu_140;
reg   [7:0] reuse_reg_fu_144;
reg   [7:0] w0_fu_148;
wire   [7:0] w0_2_fu_662_p3;
reg   [7:0] w0_1_fu_152;
wire   [7:0] select_ln37_5_fu_617_p3;
reg   [7:0] w1_fu_156;
reg   [7:0] w1_1_fu_160;
wire   [7:0] select_ln37_3_fu_603_p3;
reg   [7:0] w2_fu_164;
reg   [7:0] w2_1_fu_168;
wire   [7:0] select_ln37_2_fu_523_p3;
reg   [10:0] x_fu_172;
wire   [10:0] add_ln44_fu_499_p2;
reg   [30:0] y_fu_176;
wire   [30:0] select_ln37_6_fu_630_p3;
reg   [61:0] indvar_flatten_fu_180;
wire   [61:0] add_ln37_fu_347_p2;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_01001_grp1;
reg    line0_ce1_local;
reg    line0_we0_local;
reg    line0_ce0_local;
reg    line1_ce0_local;
reg    line1_we0_local;
wire   [7:0] r_fu_378_p3;
wire   [7:0] mul_ln13_1_fu_408_p0;
wire   [8:0] mul_ln13_1_fu_408_p1;
wire   [31:0] zext_ln44_1_fu_417_p1;
wire   [10:0] select_ln37_fu_426_p3;
wire   [9:0] tmp_1_fu_478_p4;
wire   [31:0] zext_ln37_fu_434_p1;
wire   [15:0] grp_fu_979_p3;
wire   [8:0] shl_ln2_fu_560_p3;
wire   [9:0] zext_ln81_1_fu_568_p1;
wire   [9:0] zext_ln78_1_fu_556_p1;
wire   [30:0] add_ln37_1_fu_624_p2;
wire   [29:0] tmp_fu_637_p4;
wire   [0:0] icmp_fu_647_p2;
wire   [7:0] select_ln37_4_fu_610_p3;
wire   [7:0] select_ln37_7_fu_690_p3;
wire   [8:0] shl_ln_fu_697_p3;
wire   [8:0] shl_ln77_1_fu_709_p3;
wire   [8:0] zext_ln78_2_fu_720_p1;
wire   [8:0] zext_ln76_1_fu_682_p1;
wire   [8:0] add_ln77_1_fu_729_p2;
wire   [9:0] zext_ln77_4_fu_735_p1;
wire   [9:0] zext_ln77_1_fu_705_p1;
wire   [9:0] add_ln77_fu_739_p2;
wire   [10:0] zext_ln77_fu_686_p1;
wire   [10:0] zext_ln77_5_fu_745_p1;
wire   [9:0] zext_ln78_fu_716_p1;
wire   [9:0] zext_ln77_3_fu_726_p1;
wire   [9:0] add_ln78_fu_755_p2;
wire   [10:0] zext_ln78_3_fu_761_p1;
wire   [10:0] sub_ln77_fu_749_p2;
wire   [8:0] shl_ln1_fu_771_p3;
wire   [10:0] zext_ln80_fu_783_p1;
wire   [10:0] zext_ln76_fu_678_p1;
wire   [10:0] sub_ln80_fu_786_p2;
wire   [10:0] zext_ln81_fu_779_p1;
wire   [10:0] sub_ln80_1_fu_792_p2;
wire   [10:0] sub_ln81_fu_798_p2;
wire   [10:0] zext_ln77_2_fu_723_p1;
wire   [10:0] gx_fu_765_p2;
wire   [10:0] gx_1_fu_810_p3;
wire   [10:0] gy_fu_804_p2;
wire   [10:0] gy_1_fu_822_p3;
wire   [0:0] cmp129_fu_653_p2;
wire   [9:0] sub_ln83_fu_879_p2;
wire   [9:0] select_ln83_fu_884_p3;
wire   [9:0] sub_ln83_1_fu_898_p2;
wire   [9:0] select_ln83_1_fu_903_p3;
wire   [7:0] trunc_ln83_1_fu_909_p1;
wire   [7:0] trunc_ln83_fu_890_p1;
wire   [10:0] zext_ln83_1_fu_913_p1;
wire   [10:0] zext_ln83_fu_894_p1;
wire   [10:0] mag_fu_923_p2;
wire   [2:0] tmp_4_fu_929_p4;
wire   [0:0] icmp_ln84_fu_939_p2;
wire   [7:0] add_ln85_fu_917_p2;
wire   [7:0] edge_fu_945_p3;
wire   [7:0] edge_1_fu_953_p3;
wire   [7:0] grp_fu_971_p0;
wire   [6:0] grp_fu_971_p1;
wire   [7:0] grp_fu_979_p0;
wire   [4:0] grp_fu_979_p1;
reg    grp_fu_971_ce;
reg    grp_fu_979_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [14:0] grp_fu_971_p00;
wire   [12:0] grp_fu_979_p00;
wire   [15:0] mul_ln13_1_fu_408_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 reuse_addr_reg27_fu_132 = 64'd0;
#0 reuse_reg26_fu_136 = 8'd0;
#0 reuse_addr_reg_fu_140 = 64'd0;
#0 reuse_reg_fu_144 = 8'd0;
#0 w0_fu_148 = 8'd0;
#0 w0_1_fu_152 = 8'd0;
#0 w1_fu_156 = 8'd0;
#0 w1_1_fu_160 = 8'd0;
#0 w2_fu_164 = 8'd0;
#0 w2_1_fu_168 = 8'd0;
#0 x_fu_172 = 11'd0;
#0 y_fu_176 = 31'd0;
#0 indvar_flatten_fu_180 = 62'd0;
#0 ap_done_reg = 1'b0;
end

sobel_rgb_axis_sobel_rgb_axis_Pipeline_row_loop_col_loop_line1_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
line1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line1_addr_reg_1164),
    .ce0(line1_ce0_local),
    .we0(line1_we0_local),
    .d0(w1_2_fu_543_p3),
    .q0(line1_q0)
);

sobel_rgb_axis_sobel_rgb_axis_Pipeline_row_loop_col_loop_line0_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
line0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line0_addr_reg_1174),
    .ce0(line0_ce0_local),
    .we0(line0_we0_local),
    .d0(line0_d0),
    .address1(line0_address1),
    .ce1(line0_ce1_local),
    .q1(line0_q1)
);

sobel_rgb_axis_mul_8ns_9ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
mul_8ns_9ns_16_1_1_U1(
    .din0(mul_ln13_1_fu_408_p0),
    .din1(mul_ln13_1_fu_408_p1),
    .dout(mul_ln13_1_fu_408_p2)
);

sobel_rgb_axis_mac_muladd_8ns_7ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_7ns_16ns_16_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_971_p0),
    .din1(grp_fu_971_p1),
    .din2(mul_ln13_1_fu_408_p2),
    .ce(grp_fu_971_ce),
    .dout(grp_fu_971_p3)
);

sobel_rgb_axis_mac_muladd_8ns_5ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_5ns_16ns_16_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_979_p0),
    .din1(grp_fu_979_p1),
    .din2(grp_fu_971_p3),
    .ce(grp_fu_979_ce),
    .dout(grp_fu_979_p3)
);

sobel_rgb_axis_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_180 <= 62'd0;
        end else if (((icmp_ln37_fu_342_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_180 <= add_ln37_fu_347_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reuse_addr_reg27_fu_132 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            reuse_addr_reg27_fu_132 <= zext_ln44_fu_444_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reuse_addr_reg_fu_140 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            reuse_addr_reg_fu_140 <= zext_ln44_fu_444_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reuse_reg26_fu_136 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            reuse_reg26_fu_136 <= w1_2_reg_1206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            reuse_reg_fu_144 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
            reuse_reg_fu_144 <= {{grp_fu_979_p3[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w0_1_fu_152 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            w0_1_fu_152 <= select_ln37_5_fu_617_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w0_fu_148 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            w0_fu_148 <= w0_2_fu_662_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w1_1_fu_160 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            w1_1_fu_160 <= select_ln37_3_fu_603_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w1_fu_156 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            w1_fu_156 <= w1_2_reg_1206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w2_1_fu_168 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
            w2_1_fu_168 <= select_ln37_2_fu_523_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            w2_fu_164 <= 8'd0;
        end else if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
            w2_fu_164 <= {{grp_fu_979_p3[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_fu_172 <= 11'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            x_fu_172 <= add_ln44_fu_499_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            y_fu_176 <= 31'd0;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            y_fu_176 <= select_ln37_6_fu_630_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        add_ln81_reg_1213 <= add_ln81_fu_572_p2;
        addr_cmp30_reg_1169 <= addr_cmp30_fu_453_p2;
        addr_cmp30_reg_1169_pp0_iter6_reg <= addr_cmp30_reg_1169;
        addr_cmp_reg_1180 <= addr_cmp_fu_462_p2;
        and_ln74_reg_1218 <= and_ln74_fu_673_p2;
        b_reg_1123 <= b_fu_394_p1;
        din_dest_reg_1113 <= in_axis_TDEST;
        din_dest_reg_1113_pp0_iter3_reg <= din_dest_reg_1113;
        din_dest_reg_1113_pp0_iter4_reg <= din_dest_reg_1113_pp0_iter3_reg;
        din_dest_reg_1113_pp0_iter5_reg <= din_dest_reg_1113_pp0_iter4_reg;
        din_dest_reg_1113_pp0_iter6_reg <= din_dest_reg_1113_pp0_iter5_reg;
        din_dest_reg_1113_pp0_iter7_reg <= din_dest_reg_1113_pp0_iter6_reg;
        din_id_reg_1108 <= in_axis_TID;
        din_id_reg_1108_pp0_iter3_reg <= din_id_reg_1108;
        din_id_reg_1108_pp0_iter4_reg <= din_id_reg_1108_pp0_iter3_reg;
        din_id_reg_1108_pp0_iter5_reg <= din_id_reg_1108_pp0_iter4_reg;
        din_id_reg_1108_pp0_iter6_reg <= din_id_reg_1108_pp0_iter5_reg;
        din_id_reg_1108_pp0_iter7_reg <= din_id_reg_1108_pp0_iter6_reg;
        din_keep_reg_1098 <= in_axis_TKEEP;
        din_keep_reg_1098_pp0_iter3_reg <= din_keep_reg_1098;
        din_keep_reg_1098_pp0_iter4_reg <= din_keep_reg_1098_pp0_iter3_reg;
        din_keep_reg_1098_pp0_iter5_reg <= din_keep_reg_1098_pp0_iter4_reg;
        din_keep_reg_1098_pp0_iter6_reg <= din_keep_reg_1098_pp0_iter5_reg;
        din_keep_reg_1098_pp0_iter7_reg <= din_keep_reg_1098_pp0_iter6_reg;
        din_strb_reg_1103 <= in_axis_TSTRB;
        din_strb_reg_1103_pp0_iter3_reg <= din_strb_reg_1103;
        din_strb_reg_1103_pp0_iter4_reg <= din_strb_reg_1103_pp0_iter3_reg;
        din_strb_reg_1103_pp0_iter5_reg <= din_strb_reg_1103_pp0_iter4_reg;
        din_strb_reg_1103_pp0_iter6_reg <= din_strb_reg_1103_pp0_iter5_reg;
        din_strb_reg_1103_pp0_iter7_reg <= din_strb_reg_1103_pp0_iter6_reg;
        dout_last_reg_1190 <= dout_last_fu_494_p2;
        dout_last_reg_1190_pp0_iter6_reg <= dout_last_reg_1190;
        dout_last_reg_1190_pp0_iter7_reg <= dout_last_reg_1190_pp0_iter6_reg;
        dout_user_reg_1245 <= dout_user_fu_850_p2;
        empty_17_reg_1223 <= empty_17_fu_818_p1;
        first_iter_0_reg_1154 <= first_iter_0_fu_438_p2;
        first_iter_0_reg_1154_pp0_iter6_reg <= first_iter_0_reg_1154;
        g_reg_1118 <= {{in_axis_TDATA[15:8]}};
        g_reg_1118_pp0_iter3_reg <= g_reg_1118;
        gray_reg_1200 <= {{grp_fu_979_p3[15:8]}};
        icmp_ln44_reg_1143 <= icmp_ln44_fu_421_p2;
        icmp_ln44_reg_1143_pp0_iter6_reg <= icmp_ln44_reg_1143;
        icmp_ln74_reg_1185 <= icmp_ln74_fu_488_p2;
        icmp_ln74_reg_1185_pp0_iter6_reg <= icmp_ln74_reg_1185;
        line0_addr_reg_1174 <= zext_ln44_fu_444_p1;
        line1_addr_reg_1164 <= zext_ln44_fu_444_p1;
        select_ln37_1_reg_1195 <= select_ln37_1_fu_516_p3;
        tmp_2_reg_1235 <= gx_1_fu_810_p3[32'd10];
        tmp_3_reg_1240 <= gy_1_fu_822_p3[32'd10];
        trunc_ln72_reg_1229 <= trunc_ln72_fu_830_p1;
        w1_2_reg_1206 <= w1_2_fu_543_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (*) begin
    if (((icmp_ln37_fu_342_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_971_ce = 1'b1;
    end else begin
        grp_fu_971_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_979_ce = 1'b1;
    end else begin
        grp_fu_979_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_axis_TDATA_blk_n = in_axis_TVALID;
    end else begin
        in_axis_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_axis_TREADY = 1'b1;
    end else begin
        in_axis_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line0_ce0_local = 1'b1;
    end else begin
        line0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        line0_ce1_local = 1'b1;
    end else begin
        line0_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line0_we0_local = 1'b1;
    end else begin
        line0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line1_ce0_local = 1'b1;
    end else begin
        line1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line1_we0_local = 1'b1;
    end else begin
        line1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        out_axis_TDATA_blk_n = out_axis_TREADY;
    end else begin
        out_axis_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        out_axis_TVALID = 1'b1;
    end else begin
        out_axis_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_1_fu_624_p2 = (y_fu_176 + 31'd1);

assign add_ln37_fu_347_p2 = (indvar_flatten_fu_180 + 62'd1);

assign add_ln44_fu_499_p2 = (select_ln37_fu_426_p3 + 11'd1);

assign add_ln77_1_fu_729_p2 = (zext_ln78_2_fu_720_p1 + zext_ln76_1_fu_682_p1);

assign add_ln77_fu_739_p2 = (zext_ln77_4_fu_735_p1 + zext_ln77_1_fu_705_p1);

assign add_ln78_fu_755_p2 = (zext_ln78_fu_716_p1 + zext_ln77_3_fu_726_p1);

assign add_ln81_fu_572_p2 = (zext_ln81_1_fu_568_p1 + zext_ln78_1_fu_556_p1);

assign add_ln85_fu_917_p2 = (trunc_ln83_1_fu_909_p1 + trunc_ln83_fu_890_p1);

assign addr_cmp30_fu_453_p2 = ((reuse_addr_reg27_fu_132 == zext_ln44_fu_444_p1) ? 1'b1 : 1'b0);

assign addr_cmp_fu_462_p2 = ((reuse_addr_reg_fu_140 == zext_ln44_fu_444_p1) ? 1'b1 : 1'b0);

assign and_ln74_fu_673_p2 = (icmp_ln74_reg_1185_pp0_iter6_reg & icmp_fu_647_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp1 = (((out_axis_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((in_axis_TVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_axis_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((in_axis_TVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = (((out_axis_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((in_axis_TVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_axis_TREADY == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((in_axis_TVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign b_fu_394_p1 = in_axis_TDATA[7:0];

assign cmp129_fu_653_p2 = ((select_ln37_6_fu_630_p3 == 31'd0) ? 1'b1 : 1'b0);

assign dout_last_fu_494_p2 = ((zext_ln37_fu_434_p1 == sub133) ? 1'b1 : 1'b0);

assign dout_user_fu_850_p2 = (first_iter_0_reg_1154_pp0_iter6_reg & cmp129_fu_653_p2);

assign edge_1_fu_953_p3 = ((and_ln74_reg_1218[0:0] == 1'b1) ? edge_fu_945_p3 : 8'd0);

assign edge_fu_945_p3 = ((icmp_ln84_fu_939_p2[0:0] == 1'b1) ? 8'd255 : add_ln85_fu_917_p2);

assign empty_17_fu_818_p1 = gx_1_fu_810_p3[9:0];

assign first_iter_0_fu_438_p2 = ((select_ln37_fu_426_p3 == 11'd0) ? 1'b1 : 1'b0);

assign grp_fu_971_p0 = grp_fu_971_p00;

assign grp_fu_971_p00 = r_fu_378_p3;

assign grp_fu_971_p1 = 15'd77;

assign grp_fu_979_p0 = grp_fu_979_p00;

assign grp_fu_979_p00 = b_reg_1123;

assign grp_fu_979_p1 = 13'd29;

assign gx_1_fu_810_p3 = ((and_ln74_fu_673_p2[0:0] == 1'b1) ? gx_fu_765_p2 : 11'd0);

assign gx_fu_765_p2 = (zext_ln78_3_fu_761_p1 + sub_ln77_fu_749_p2);

assign gy_1_fu_822_p3 = ((and_ln74_fu_673_p2[0:0] == 1'b1) ? gy_fu_804_p2 : 11'd0);

assign gy_fu_804_p2 = (sub_ln81_fu_798_p2 + zext_ln77_2_fu_723_p1);

assign icmp_fu_647_p2 = ((tmp_fu_637_p4 != 30'd0) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_342_p2 = ((indvar_flatten_fu_180 == mul_ln18) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_421_p2 = (($signed(zext_ln44_1_fu_417_p1) < $signed(width)) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_488_p2 = ((tmp_1_fu_478_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_939_p2 = ((tmp_4_fu_929_p4 != 3'd0) ? 1'b1 : 1'b0);

assign line0_address1 = zext_ln44_fu_444_p1;

assign line0_d0 = {{grp_fu_979_p3[15:8]}};

assign mag_fu_923_p2 = (zext_ln83_1_fu_913_p1 + zext_ln83_fu_894_p1);

assign mul_ln13_1_fu_408_p0 = mul_ln13_1_fu_408_p00;

assign mul_ln13_1_fu_408_p00 = g_reg_1118_pp0_iter3_reg;

assign mul_ln13_1_fu_408_p1 = 16'd150;

assign out_axis_TDATA = {{{edge_1_fu_953_p3}, {edge_1_fu_953_p3}}, {edge_1_fu_953_p3}};

assign out_axis_TDEST = din_dest_reg_1113_pp0_iter7_reg;

assign out_axis_TID = din_id_reg_1108_pp0_iter7_reg;

assign out_axis_TKEEP = din_keep_reg_1098_pp0_iter7_reg;

assign out_axis_TLAST = dout_last_reg_1190_pp0_iter7_reg;

assign out_axis_TSTRB = din_strb_reg_1103_pp0_iter7_reg;

assign out_axis_TUSER = dout_user_reg_1245;

assign r_fu_378_p3 = {{in_axis_TDATA[23:16]}};

assign select_ln37_1_fu_516_p3 = ((icmp_ln44_reg_1143[0:0] == 1'b1) ? w2_1_fu_168 : 8'd0);

assign select_ln37_2_fu_523_p3 = ((icmp_ln44_reg_1143[0:0] == 1'b1) ? w2_fu_164 : 8'd0);

assign select_ln37_3_fu_603_p3 = ((icmp_ln44_reg_1143_pp0_iter6_reg[0:0] == 1'b1) ? w1_fu_156 : 8'd0);

assign select_ln37_4_fu_610_p3 = ((icmp_ln44_reg_1143_pp0_iter6_reg[0:0] == 1'b1) ? w0_1_fu_152 : 8'd0);

assign select_ln37_5_fu_617_p3 = ((icmp_ln44_reg_1143_pp0_iter6_reg[0:0] == 1'b1) ? w0_fu_148 : 8'd0);

assign select_ln37_6_fu_630_p3 = ((icmp_ln44_reg_1143_pp0_iter6_reg[0:0] == 1'b1) ? y_fu_176 : add_ln37_1_fu_624_p2);

assign select_ln37_7_fu_690_p3 = ((icmp_ln44_reg_1143_pp0_iter6_reg[0:0] == 1'b1) ? w1_1_fu_160 : 8'd0);

assign select_ln37_fu_426_p3 = ((icmp_ln44_fu_421_p2[0:0] == 1'b1) ? x_fu_172 : 11'd0);

assign select_ln83_1_fu_903_p3 = ((tmp_3_reg_1240[0:0] == 1'b1) ? sub_ln83_1_fu_898_p2 : trunc_ln72_reg_1229);

assign select_ln83_fu_884_p3 = ((tmp_2_reg_1235[0:0] == 1'b1) ? sub_ln83_fu_879_p2 : empty_17_reg_1223);

assign shl_ln1_fu_771_p3 = {{select_ln37_5_fu_617_p3}, {1'd0}};

assign shl_ln2_fu_560_p3 = {{select_ln37_2_fu_523_p3}, {1'd0}};

assign shl_ln77_1_fu_709_p3 = {{w1_2_reg_1206}, {1'd0}};

assign shl_ln_fu_697_p3 = {{select_ln37_7_fu_690_p3}, {1'd0}};

assign sub_ln77_fu_749_p2 = (zext_ln77_fu_686_p1 - zext_ln77_5_fu_745_p1);

assign sub_ln80_1_fu_792_p2 = (sub_ln80_fu_786_p2 - zext_ln81_fu_779_p1);

assign sub_ln80_fu_786_p2 = (zext_ln80_fu_783_p1 - zext_ln76_fu_678_p1);

assign sub_ln81_fu_798_p2 = (sub_ln80_1_fu_792_p2 - zext_ln77_fu_686_p1);

assign sub_ln83_1_fu_898_p2 = (10'd0 - trunc_ln72_reg_1229);

assign sub_ln83_fu_879_p2 = (10'd0 - empty_17_reg_1223);

assign tmp_1_fu_478_p4 = {{select_ln37_fu_426_p3[10:1]}};

assign tmp_4_fu_929_p4 = {{mag_fu_923_p2[10:8]}};

assign tmp_fu_637_p4 = {{select_ln37_6_fu_630_p3[30:1]}};

assign trunc_ln72_fu_830_p1 = gy_1_fu_822_p3[9:0];

assign trunc_ln83_1_fu_909_p1 = select_ln83_1_fu_903_p3[7:0];

assign trunc_ln83_fu_890_p1 = select_ln83_fu_884_p3[7:0];

assign w0_2_fu_662_p3 = ((addr_cmp30_reg_1169_pp0_iter6_reg[0:0] == 1'b1) ? reuse_reg26_fu_136 : line1_q0);

assign w1_2_fu_543_p3 = ((addr_cmp_reg_1180[0:0] == 1'b1) ? reuse_reg_fu_144 : line0_q1);

assign zext_ln37_fu_434_p1 = select_ln37_fu_426_p3;

assign zext_ln44_1_fu_417_p1 = x_fu_172;

assign zext_ln44_fu_444_p1 = select_ln37_fu_426_p3;

assign zext_ln76_1_fu_682_p1 = select_ln37_4_fu_610_p3;

assign zext_ln76_fu_678_p1 = select_ln37_4_fu_610_p3;

assign zext_ln77_1_fu_705_p1 = shl_ln_fu_697_p3;

assign zext_ln77_2_fu_723_p1 = gray_reg_1200;

assign zext_ln77_3_fu_726_p1 = gray_reg_1200;

assign zext_ln77_4_fu_735_p1 = add_ln77_1_fu_729_p2;

assign zext_ln77_5_fu_745_p1 = add_ln77_fu_739_p2;

assign zext_ln77_fu_686_p1 = w0_2_fu_662_p3;

assign zext_ln78_1_fu_556_p1 = select_ln37_1_fu_516_p3;

assign zext_ln78_2_fu_720_p1 = select_ln37_1_reg_1195;

assign zext_ln78_3_fu_761_p1 = add_ln78_fu_755_p2;

assign zext_ln78_fu_716_p1 = shl_ln77_1_fu_709_p3;

assign zext_ln80_fu_783_p1 = add_ln81_reg_1213;

assign zext_ln81_1_fu_568_p1 = shl_ln2_fu_560_p3;

assign zext_ln81_fu_779_p1 = shl_ln1_fu_771_p3;

assign zext_ln83_1_fu_913_p1 = select_ln83_1_fu_903_p3;

assign zext_ln83_fu_894_p1 = select_ln83_fu_884_p3;

endmodule //sobel_rgb_axis_sobel_rgb_axis_Pipeline_row_loop_col_loop
